{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Page = _interopRequireDefault(require(\"./components/Page\"));\n\nvar _applications = _interopRequireDefault(require(\"./dummyData/applications.json\"));\n\nvar _Application = _interopRequireDefault(require(\"./components/Application\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/yunus/Documents/anna/ANNA/App.tsx\";\n\nvar App = function App() {\n  var restaurants = [];\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      selectedRes = _useState2[0],\n      setSelectedRes = _useState2[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"dark-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_Page.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, _applications.default.map(function (application, index) {\n    if (restaurants.indexOf(application.restaurant.label) === -1) {\n      restaurants.push(application.restaurant.label);\n      return _react.default.createElement(_reactNative.Button, {\n        key: index,\n        onPress: function onPress() {\n          return setSelectedRes(application.restaurant.label);\n        },\n        title: application.restaurant.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      });\n    } else {\n      null;\n    }\n  }), _react.default.createElement(_Application.default, {\n    restaurant: selectedRes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["/home/yunus/Documents/anna/ANNA/App.tsx"],"names":["App","restaurants","selectedRes","setSelectedRes","applications","map","application","index","indexOf","restaurant","label","push"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AACA;;;;;AAEA,IAAMA,GAAsB,GAAG,SAAzBA,GAAyB,GAAM;AACnC,MAAMC,WAAqB,GAAG,EAA9B;;AADmC,kBAEG,qBAAS,EAAT,CAFH;AAAA;AAAA,MAE5BC,WAF4B;AAAA,MAEfC,cAFe;;AAInC,SACE,4DACE,6BAAC,sBAAD;AAAW,IAAA,QAAQ,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,sBAAaC,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd,EAAwB;AACxC,QAAIN,WAAW,CAACO,OAAZ,CAAoBF,WAAW,CAACG,UAAZ,CAAuBC,KAA3C,MAAsD,CAAC,CAA3D,EAA8D;AAC5DT,MAAAA,WAAW,CAACU,IAAZ,CAAiBL,WAAW,CAACG,UAAZ,CAAuBC,KAAxC;AACA,aACE,6BAAC,mBAAD;AACE,QAAA,GAAG,EAAEH,KADP;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMJ,cAAc,CAACG,WAAW,CAACG,UAAZ,CAAuBC,KAAxB,CAApB;AAAA,SAFX;AAGE,QAAA,KAAK,EAAEJ,WAAW,CAACG,UAAZ,CAAuBC,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KATD,MASO;AACL;AACD;AACF,GAbA,CADH,EAeE,6BAAC,oBAAD;AAAa,IAAA,UAAU,EAAER,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CAFF,CADF;AAsBD,CA1BD;;eA4BeF,G","sourcesContent":["import React, {useState} from 'react';\nimport {StatusBar, Text, Button} from 'react-native';\nimport Header from './components/Header';\nimport Welcome from './components/Welcome';\nimport Page from './components/Page';\nimport applications from './dummyData/applications.json';\nimport Application from './components/Application';\n\nconst App: () => JSX.Element = () => {\n  const restaurants: string[] = [];\n  const [selectedRes, setSelectedRes] = useState('');\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <Page>\n        {applications.map((application, index) => {\n          if (restaurants.indexOf(application.restaurant.label) === -1) {\n            restaurants.push(application.restaurant.label);\n            return (\n              <Button\n                key={index}\n                onPress={() => setSelectedRes(application.restaurant.label)}\n                title={application.restaurant.label}\n              />\n            );\n          } else {\n            null;\n          }\n        })}\n        <Application restaurant={selectedRes} />\n      </Page>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}